#include <iostream>

using namespace std;
 class TicTacToe {
        private:
           char board[3][3]; // Two-dimensional arrays to store the game board
           char currentPlayer;

        public:
          TicTacToe() {
           // Initialize the game board and current player
          for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                board[i][j] = '-';
            }
        }
        currentPlayer = 'X';
    }

    void displayBoard() {
        // Display the game board
        for (int i = 0; i < 3; i++) {
            cout << "-------------" << endl;
            cout << "| ";
            for (int j = 0; j < 3; j++) {
                cout << board[i][j] << " | ";
            }
            cout << endl;
        }
        cout << "-------------" << endl;
    }

    bool makeMove(int row, int col) {
        // Check if the move is valid and update the game board
        if (row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == '-') {
            board[row][col] = currentPlayer;
            currentPlayer = (currentPlayer == 'X' ? 'O' : 'X');
            return true;
        }
        return false;
    }

    bool checkForWin() {
        // Check if there is a win
        for (int i = 0; i < 3; i++) {
            if (board[i][0] != '-' && board[i][0] == board[i][1] && board[i][1] == board[i][2]) {
                return true;
            }
            if (board[0][i] != '-' && board[0][i] == board[1][i] && board[1][i] == board[2][i]) {
                return true;
            }
        }
        if (board[0][0] != '-' && board[0][0] == board[1][1] && board[1][1] == board[2][2]) {
            return true;
        }
        if (board[0][2] != '-' && board[0][2] == board[1][1] && board[1][1] == board[2][0]) {
            return true;
        }
        return false;
    }

    bool checkForDraw() {
        // Check if there is a draw
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i][j] == '-') {
                    return false;
                }
            }
        }
        return true;
    }

    char getCurrentPlayer() {
        // Return the current player
        return currentPlayer;
    }
};

int main(){
	TicTacToe obj;
	obj.displayBoard();
	obj.checkForWin();
	obj.checkForDraw();
	obj.getCurrentPlayer();
}
